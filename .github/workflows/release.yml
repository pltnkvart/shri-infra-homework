name: Release Workflow

on:
    workflow_dispatch:

jobs:
    lint-and-test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Install Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20
            - name: Install dependencies
              run: npm install
            - name: Build project
              run: npm run build
            - name: Run lint
              run: npm run lint
            - name: Run tests
              run: npm run test

    create-release-branch-and-tag:
        runs-on: ubuntu-latest
        needs: lint-and-test
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Set up Git user
              run: |
                  git config --global user.name "pltnkvart"
                  git config --global user.email "artosi@yandex.ru"

            - name: Create release branch and tag
              run: |
                  git checkout -b releases/${{ github.run_number }}
                  git push origin releases/${{ github.run_number }}
                  git tag -a v${{ github.run_number }} -m "Release ${{ github.run_number }}"
                  git push origin --tags

    build-and-push-docker-image:
        runs-on: ubuntu-latest
        needs: create-release-branch-and-tag
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Log in to Yandex Cloud Container Registry
              run: docker login --username oauth --password ${{ secrets.YANDEX_CLOUD_CR_TOKEN }} cr.yandex

            - name: Build and push Docker image
              run: |
                  docker build -t cr.yandex/crpvtl1jahgdv5iobshc/shri-infra:${{ github.run_number }} .
                  docker tag cr.yandex/crpvtl1jahgdv5iobshc/shri-infra:${{ github.run_number }} cr.yandex/crpvtl1jahgdv5iobshc/shri-infra:${{ github.run_number }}_latest
                  docker push cr.yandex/crpvtl1jahgdv5iobshc/shri-infra:${{ github.run_number }}
                  docker push cr.yandex/crpvtl1jahgdv5iobshc/shri-infra:${{ github.run_number }}_latest

    create-issue:
        runs-on: ubuntu-latest
        needs: create-release-branch-and-tag
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Set up Git user
              run: |
                  git config --global user.name "pltnkvart"
                  git config --global user.email "artosi@yandex.ru"

            - name: Set Date
              run: echo "CURRENT_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

            - name: Create Release Label
              run: |
                  gh label create "release-${{ github.run_number }}" || echo "Label already exists"
              env:
                  GH_TOKEN: ${{ github.token }}

            - name: Create Release Issue
              env:
                  GH_TOKEN: ${{ github.token }}
              run: |
                  commit_list=$(git log --oneline $latest_tag)
                  gh issue create \
                    --title "Release ${{ github.run_number }}" \
                    --body "$(echo -e "**Date:** $(date -u +"%Y-%m-%dT%H:%M:%SZ")<br> \
                      **Author:** ${{ github.actor }}<br> \
                      **Version:** ${{ github.run_number }}<br> \
                      **Commits:**<br>$commit_list<br> \
                      **Docker Image:** cr.yandex/crpvtl1jahgdv5iobshc/app:${{ github.run_number }}")"

    update-changelog:
        runs-on: ubuntu-latest
        needs: create-issue
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Set up Git user
              run: |
                  git config --global user.name "pltnkvart"
                  git config --global user.email "artosi@yandex.ru"

            - name: Update changelog
              run: |
                  git fetch
                  git checkout releases/${{ github.run_number }}
                  git fetch --tags
                  latest_tag=$(git describe --tags --abbrev=0)
                  echo "Latest tag: $latest_tag"
                  echo "## Release ${{ github.run_number }} - $(date)" > temp_CHANGELOG.md
                  echo >> temp_CHANGELOG.md
                  git log --pretty=format:"- %s" $latest_tag..HEAD >> temp_CHANGELOG.md
                  echo >> temp_CHANGELOG.md
                  echo "Current CHANGELOG.md content:"
                  cat CHANGELOG.md
                  cat CHANGELOG.md >> temp_CHANGELOG.md
                  mv temp_CHANGELOG.md CHANGELOG.md
                  echo "Updated CHANGELOG.md content:"
                  cat CHANGELOG.md
                  git add CHANGELOG.md
                  git commit -m "Update CHANGELOG for release ${{ github.run_number }}"
                  git push origin releases/${{ github.run_number }}
